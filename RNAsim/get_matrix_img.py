import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import matplotlib as mpl
import requests

import os, shutil

def get_transcript(transcript):
    r = requests.get(
        f'https://rest.ensembl.org/sequence/id/{transcript}'\
            '?content-type=text/plain&type=cdna')
    return r.text.replace('T', 'U')

def get_matrix_img(trans, seq, probmat):
    C = np.array(
        [[255, 255, 255],
        [253, 255, 254],
        [250, 254, 253],
        [248, 253, 251],
        [245, 252, 250],
        [242, 251, 248],
        [240, 250, 247],
        [237, 249, 245],
        [234, 248, 244],
        [232, 247, 242],
        [229, 246, 241],
        [226, 245, 239],
        [224, 244, 238],
        [221, 243, 236],
        [218, 242, 235],
        [216, 241, 233],
        [213, 240, 232],
        [210, 239, 230],
        [208, 238, 229],
        [205, 237, 227],
        [202, 236, 226],
        [200, 235, 224],
        [197, 234, 223],
        [194, 233, 221],
        [192, 233, 220],
        [189, 232, 218],
        [186, 231, 217],
        [184, 230, 215],
        [181, 229, 214],
        [178, 228, 212],
        [176, 227, 211],
        [173, 226, 209],
        [170, 225, 208],
        [168, 224, 206],
        [165, 223, 205],
        [162, 222, 203],
        [160, 221, 202],
        [157, 220, 200],
        [154, 219, 199],
        [152, 218, 197],
        [149, 217, 196],
        [146, 216, 194],
        [144, 215, 193],
        [141, 214, 191],
        [138, 213, 190],
        [136, 212, 188],
        [133, 211, 187],
        [130, 210, 185],
        [128, 209, 184],
        [125, 208, 182],
        [122, 207, 181],
        [120, 206, 179],
        [117, 205, 178],
        [114, 204, 176],
        [112, 203, 175],
        [109, 202, 173],
        [106, 201, 172],
        [104, 201, 170],
        [101, 200, 169],
        [ 98, 199, 167],
        [ 96, 198, 166],
        [ 93, 197, 164],
        [ 90, 196, 163],
        [ 88, 195, 161],
        [ 86, 194, 160],
        [ 84, 193, 159],
        [ 83, 191, 159],
        [ 82, 190, 158],
        [ 81, 189, 157],
        [ 80, 188, 157],
        [ 79, 187, 156],
        [ 78, 186, 156],
        [ 77, 185, 155],
        [ 76, 183, 154],
        [ 75, 182, 154],
        [ 74, 181, 153],
        [ 73, 180, 153],
        [ 72, 179, 152],
        [ 71, 178, 151],
        [ 70, 177, 151],
        [ 69, 175, 150],
        [ 68, 174, 150],
        [ 67, 173, 149],
        [ 66, 172, 149],
        [ 65, 171, 148],
        [ 64, 170, 147],
        [ 63, 169, 147],
        [ 62, 167, 146],
        [ 60, 166, 146],
        [ 59, 165, 145],
        [ 58, 164, 144],
        [ 57, 163, 144],
        [ 56, 162, 143],
        [ 55, 161, 143],
        [ 54, 159, 142],
        [ 53, 158, 141],
        [ 52, 157, 141],
        [ 51, 156, 140],
        [ 50, 155, 140],
        [ 49, 154, 139],
        [ 48, 153, 138],
        [ 47, 152, 138],
        [ 46, 150, 137],
        [ 45, 149, 137],
        [ 44, 148, 136],
        [ 43, 147, 135],
        [ 42, 146, 135],
        [ 41, 145, 134],
        [ 40, 144, 134],
        [ 39, 142, 133],
        [ 38, 141, 132],
        [ 37, 140, 132],
        [ 35, 139, 131],
        [ 34, 138, 131],
        [ 33, 137, 130],
        [ 32, 136, 130],
        [ 31, 134, 129],
        [ 30, 133, 128],
        [ 29, 132, 128],
        [ 28, 131, 127],
        [ 27, 130, 127],
        [ 26, 129, 126],
        [ 25, 128, 125],
        [ 24, 126, 125],
        [ 23, 125, 124],
        [ 22, 124, 124],
        [ 21, 123, 123],
        [ 20, 122, 122],
        [ 19, 121, 122],
        [ 19, 120, 122],
        [ 19, 119, 122],
        [ 18, 118, 122],
        [ 18, 117, 122],
        [ 18, 116, 122],
        [ 17, 115, 122],
        [ 17, 114, 122],
        [ 17, 113, 122],
        [ 16, 112, 122],
        [ 16, 111, 122],
        [ 16, 110, 122],
        [ 16, 109, 122],
        [ 15, 109, 122],
        [ 15, 108, 122],
        [ 15, 107, 122],
        [ 14, 106, 122],
        [ 14, 105, 122],
        [ 14, 104, 122],
        [ 13, 103, 122],
        [ 13, 102, 122],
        [ 13, 101, 122],
        [ 13, 100, 122],
        [ 12,  99, 122],
        [ 12,  98, 122],
        [ 12,  97, 122],
        [ 11,  96, 122],
        [ 11,  95, 122],
        [ 11,  94, 122],
        [ 10,  93, 122],
        [ 10,  92, 122],
        [ 10,  92, 122],
        [  9,  91, 122],
        [  9,  90, 122],
        [  9,  89, 122],
        [  9,  88, 122],
        [  8,  87, 122],
        [  8,  86, 122],
        [  8,  85, 122],
        [  7,  84, 122],
        [  7,  83, 122],
        [  7,  82, 122],
        [  6,  81, 122],
        [  6,  80, 122],
        [  6,  79, 122],
        [  6,  78, 122],
        [  5,  77, 122],
        [  5,  76, 122],
        [  5,  75, 122],
        [  4,  75, 121],
        [  4,  74, 121],
        [  4,  73, 121],
        [  3,  72, 121],
        [  3,  71, 121],
        [  3,  70, 121],
        [  3,  69, 121],
        [  2,  68, 121],
        [  2,  67, 121],
        [  2,  66, 121],
        [  1,  65, 121],
        [  1,  64, 121],
        [  1,  63, 121],
        [  0,  62, 121],
        [  0,  61, 121],
        [  0,  61, 121],
        [  0,  61, 121],
        [  0,  60, 121],
        [  0,  60, 121],
        [  0,  60, 121],
        [  0,  60, 121],
        [  0,  59, 121],
        [  0,  59, 121],
        [  0,  59, 121],
        [  0,  59, 121],
        [  0,  59, 121],
        [  0,  58, 121],
        [  0,  58, 121],
        [  0,  58, 121],
        [  0,  58, 121],
        [  0,  57, 122],
        [  0,  57, 122],
        [  0,  57, 122],
        [  0,  57, 122],
        [  0,  56, 122],
        [  0,  56, 122],
        [  0,  56, 122],
        [  0,  56, 122],
        [  0,  56, 122],
        [  0,  55, 122],
        [  0,  55, 122],
        [  0,  55, 122],
        [  0,  55, 122],
        [  0,  54, 122],
        [  0,  54, 122],
        [  0,  54, 122],
        [  0,  54, 122],
        [  0,  54, 122],
        [  0,  53, 122],
        [  0,  53, 122],
        [  0,  53, 122],
        [  0,  53, 122],
        [  0,  52, 122],
        [  0,  52, 122],
        [  0,  52, 122],
        [  0,  52, 122],
        [  0,  51, 122],
        [  0,  51, 122],
        [  0,  51, 122],
        [  0,  51, 122],
        [  0,  51, 122],
        [  0,  50, 122],
        [  0,  50, 122],
        [  0,  50, 122],
        [  0,  50, 122],
        [  0,  49, 122],
        [  0,  49, 122],
        [  0,  49, 122],
        [  0,  49, 122],
        [  0,  48, 122],
        [  0,  48, 122],
        [  0,  48, 122],
        [  0,  48, 122],
        [  0,  48, 122],
        [  0,  47, 122],
        [  0,  47, 122],
        [  0,  47, 122],
        [  0,  47, 122],
        [  0,  46, 122]]
    )
    cmap = mpl.colors.ListedColormap(C/255.0)
    listseq = list(seq)
    fig, ax = plt.subplots()
    latex = '$p_{ij}$'
    ax.set_title(f'{trans}: Probability Matrix, {latex}')
    im = ax.matshow(probmat, cmap=cmap)
    ax.set_xlabel('i')
    ax.set_ylabel('j')
    fig.colorbar(im, ax=ax, label='Probability')
    plt.close()
    return fig


def main(path='./matrix'):
    for file in os.listdir(path):
        if 'matrix.txt' in file:
            basename = file[:-4]
            transcript = basename.split('-')[0]
            sequence = get_transcript(transcript)
            probs = pd.read_csv(path + '/' + file, sep='\t', \
                                header=0, index_col=0).to_numpy(dtype=np.double)
            print(probs.shape, len(sequence))
            fig = get_matrix_img(transcript, sequence, probs)
            fig.savefig(path + '/' + basename + '.png')

if __name__ == '__main__':
    main()
